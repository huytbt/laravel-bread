#!/usr/bin/env php
<?php

if ($argc <= 1 || in_array($argv[1], array('--help', '-h', '-?'))) {
    echo <<<EOL
Usage:
  $argv[0] <option>

Options:
\033[32m  -h, --help, -? \033[0m                     Display this help message
\033[32m  test           \033[0m                     Run unit test

EOL;
    return;
}

$params = $argv;
unset($params[0]);

$packageName = 'php-soft/laravel-bread';
$breadDir = __DIR__ . '/src';
$chickenAppDir = __DIR__ . '/tests/chicken';

$exists = file_exists($chickenAppDir);

if ($argv[1] == 'init' || !$exists) {
    if (!$exists) {
        passthru("composer create-project --prefer-dist laravel/laravel {$chickenAppDir}");
    }
    chdir($chickenAppDir);
    passthru("composer config repositories.{$packageName} path {$breadDir}");
    passthru("composer require {$packageName} @dev");
}

if ($argv[1] == 'update') {
    chdir($chickenAppDir);
    passthru("composer update {$packageName} " . implode(' ', $params));
}

if ($argv[1] == 're-install') {
    chdir($chickenAppDir);
    passthru("composer remove {$packageName} --update-with-dependencies --no-scripts " . implode(' ', $params));
    passthru("composer config repositories.{$packageName} path {$breadDir}");
    passthru("composer require {$packageName} @dev");
}

if ($argv[1] == 'test') {
    unset($params[1]);
    passthru("{$chickenAppDir}/vendor/bin/phpunit --configuration {$chickenAppDir}/phpunit.xml " . implode(' ', $params), $result);
} else {
    passthru("php {$chickenAppDir}/vendor/bin/bread " . implode(' ', $params), $result);
}

exit($result);
